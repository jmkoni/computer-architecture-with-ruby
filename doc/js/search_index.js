var search_data = {"index":{"searchIndex":["cachesim","cache","mainmemory","slot","mipsdisassembler","disassemble()","display_cache()","display_read()","display_write()","new()","new()","new()","new()","output_to_file()","perform_actions()","readme"],"longSearchIndex":["cachesim","cachesim::cache","cachesim::mainmemory","cachesim::slot","mipsdisassembler","mipsdisassembler#disassemble()","cachesim::cache#display_cache()","cachesim::cache#display_read()","cachesim::cache#display_write()","cachesim::cache::new()","cachesim::mainmemory::new()","cachesim::slot::new()","mipsdisassembler::new()","mipsdisassembler#output_to_file()","cachesim::cache#perform_actions()",""],"info":[["CacheSim","","CacheSim.html","",""],["CacheSim::Cache","","CacheSim/Cache.html","","<p>This is the class that creates the actual cache and performs most of the\nactions.\n<p>Initialization:\n\n<pre>cache ...</pre>\n"],["CacheSim::MainMemory","","CacheSim/MainMemory.html","","<p>This is the class that creates the simulated main memory\n<p>Initialization:\n\n<pre>main_memory = CacheSim::MainMemory.new(size) ...</pre>\n"],["CacheSim::Slot","","CacheSim/Slot.html","","<p>This class creates a simulation of a cache. Currently it is built to take\nin an array of actions. It …\n"],["MipsDisassembler","","MipsDisassembler.html","",""],["disassemble","MipsDisassembler","MipsDisassembler.html#method-i-disassemble","()",""],["display_cache","CacheSim::Cache","CacheSim/Cache.html#method-i-display_cache","()",""],["display_read","CacheSim::Cache","CacheSim/Cache.html#method-i-display_read","(address)",""],["display_write","CacheSim::Cache","CacheSim/Cache.html#method-i-display_write","(address, data)","<p>display functions\n"],["new","CacheSim::Cache","CacheSim/Cache.html#method-c-new","(size)",""],["new","CacheSim::MainMemory","CacheSim/MainMemory.html#method-c-new","(size)",""],["new","CacheSim::Slot","CacheSim/Slot.html#method-c-new","(num, is_dirty, is_valid, tag, saved_blocks)",""],["new","MipsDisassembler","MipsDisassembler.html#method-c-new","(array_of_instructions, starting_address, is_hex)","<p>This class disassembles instructions from hex or binary to human readable\nMips Initialization: MipsTranslator.new …\n"],["output_to_file","MipsDisassembler","MipsDisassembler.html#method-i-output_to_file","()","<p>write MIPs instructions to file mips_results.txt\n"],["perform_actions","CacheSim::Cache","CacheSim/Cache.html#method-i-perform_actions","(op)","<p>This function could be redone to take user input instead\n"],["README","","README_md.html","","<p>Computer Architecture… with Ruby\n<p>While learning more about computer architecture, I wrote some Ruby …\n"]]}}